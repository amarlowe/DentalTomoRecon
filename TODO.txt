TomoRecon

-------------Features------------------
- Switch between inputs in form using tab and/or enter
- Confirm cancel or load when values have been edited
- Check values for input before allowing running, prompt a visit to config
- Open opens a render, not the raw files (used for self comparisons)
- Make MAC compiltible (hopefully not)
- Save configuration settings on project file/directory instead of registry to make them project specific
- "Set default" options for configuration and any other setting we can come up with
- Replace each failure state with it's own error type and dialoag (or pass a string)
- Inefficienicies in initial load and correction, can remove the final blur step and blurxy array
- Recon norm has essentially uniform values across the entire image, consider killing to save memory (incorrect value was being read from it in the past)
- Evaluate need to iterate through captures instead of all at once
- Look at the lighting change from the first to others
- Add timers to reconstructions
- Automatic phantom reader
- Zoom with ctrl + mouse wheel
- Color correction within current viewport
- Look into upres using the mutltiple viewing angles
- Clean up all non-recon memory when recon finishes
- Siphon mem from open recons by reading from disk and just having a buffer of slices
- Confirm overwrite on save if file already exists
- Include distance to the detector in status bar
- Add Units to all number descriptions in settings
- Make a labled and colored rectangular selection tool
- Make a dialoag box that adds selections 
- Make an automated test bench for algorithm changes
- Correct for dead pixels (not necessarily on all projection inputs)
- Older version has apparently higher constrast, although it seems to be produced by recon artifacts
- Recon artifacts are occuring whenever there are high derivative areas, if a lossy filter is a solution, make it optional
- Need to rescale lighting to accent constrast, possibly with HDR algorigthms
- Gui tools for translating scales into real world measurments
- Window and lighting adjustment presets for diffent diagnosis types
- Edit lighting and contrast
- Image annotations
- Remove focus artifacts, only show in focus areas

--------------Bugs---------------------
- AutoDetection breaks reconstruction badly
- Disable console close button
- Close behavior breaks when the console is the selected tab
- Number of Slices to Reconstruct too large may crash program
- Throw all tomo errors instead of crashing the program
- No boundary checking when changing between display types (ie, out of bounds if recon has fewer slices than input and left on the final slice)
- Cancel on new does not cancel operation
- Changing config after opening image set does not update

-------------Completed------------------
- Fix readGainAndDarkimages
- Remove magic numbers and filepaths
- Implement cjson struct building
- Save and load json files based on user input
- Implement a visualizer on a per project basis
- output console output to status bar, include a progress meter
- Implement start page in main window with instructions
- New prompts for opening of raw files, processes and displays
- Init openGl on program launch for minor speedups in first tab open
- Only allow one config window to be open at a time 
-------------Features------------------
--------------Bugs---------------------
- additional lines included on increasing z size
- index out of bounds and other conditions set array values to an explicit -10 (removed TV+sq)
- image edges given tails that are not explicitly dealt with
- debug mode causes a crash and failure (problem likely persists in release, it just gets ignored)
- when reading in files, it will attempt to read .dicom files along with the raw files and cause errors
- interop only supports a single buffer, code exits for any number, but swapping buffers fails (may not be necessary, already need to swap the main buffer)
- creating two instances works, fails after closing one. More cleanup is required
- TONS of magic numbers left scrambled around the CUDA code
- Making the viewport too small crashes opengl-line 110 (cudagraphicsresource has minimum size?)
- color inversion on low z layer counts (fixed with color normalization)
- Program locks up when button is pressed when the last frame is selected
- Loading more than 2 projections causes odd bugs
- Check for console tab before running reconstructions